
      <%= bootstrap_form_for(@product) do |f| %>
       <% if @product.errors.any? %>
    <div id="error_explanation">
      <h2>
        <%= pluralize(@product.errors.count, "error") %> prohibited
        this product from being saved:
      </h2>
      <ul>
        <% @product.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

      <%= f.text_field  :name, 
                    placeholder: 'Title', 
                    class: 'form-control',
                    required: true, 
                    minlength: 5,
                    maxlength: 100 %>
  <div class="form-group row">
          <%= f.label :images, class: 'col-sm-3 col-form-label' %>
          <div class="col-sm-9">
            <%= f.file_field :images, class: 'form-control' %>
          </div>
        </div>
            
 
      <%= f.text_field :color ,class:'form-control' %>
       <%= f.text_area :description ,class:'form-control' %>
          <%= f.collection_select :category_id, @categories_all, :id, :category_type , class:'form-control' %>
    <%= content_tag :div, class: 'js-dependent-fields', data: { 'select-id': 'product_category_id', 'option-value': "2"} do %>
      <%= f.number_field :model_year%>
      <%= f.text_field :operatingSystem %>
    <% end %>    
       <%= f.number_field :price ,class:'form-control' %>
        <%= f.text_field :size ,class:'form-control' %>
         <%= f.hidden_field :sold_by ,class:'form-control',:value => current_supplier.contact_name %>
          <%= f.number_field :stock ,class:'form-control' %>
           <%= f.check_box   :status  %>
            <%= f.number_field :discount ,class:'form-control' %>
          <%= f.text_field :brand ,class:'form-control' %>
           <%= f.text_field :model ,class:'form-control' %>



  <div class="actions ">
    <%= f.submit %></div>
    <% end %>
    </div>
    
  </div>
</div>

<script>

(function() {
  var bind, showOrHideDependentFieldsCheckbox, showOrHideDependentFieldsSelect, toggle;

  toggle = function($parent, showOrHide, method, duration) {
    if (showOrHide) {
      if (method === 'disable') {
        $parent.find('input,textarea,select,button,.btn').removeAttr('disabled');
        return $parent.find('.select2').select2('enable');
      } else {
        return $parent.show(duration);
      }
    } else {
      if (method === 'disable') {
        $parent.find('input,textarea,select,button,.btn').attr('disabled', 'disabled');
        return $parent.find('.select2').select2('disable');
      } else {
        return $parent.hide(duration);
      }
    }
  };

  showOrHideDependentFieldsSelect = function(duration) {
    var $select, showOrHideFields;

    if (duration == null) {
      duration = 'fast';
    }
    $select = $(this);
    showOrHideFields = function() {
      var $this, showOrHide;

      $this = $(this);
      showOrHide = _.contains($this.attr('data-option-value').split('|'), $select.val());
      return toggle($this, showOrHide, $this.data('method'), duration);
    };
    return $(".js-dependent-fields[data-select-id=" + ($select.attr('id')) + "]").each(showOrHideFields);
  };

  showOrHideDependentFieldsCheckbox = function(duration) {
    var $checkbox, showOrHideFields;

    if (duration == null) {
      duration = 'fast';
    }
    $checkbox = $(this);
    showOrHideFields = function() {
      var $this, showOrHide;

      $this = $(this);
      showOrHide = $this.data('checkbox-value') === $checkbox.is(':checked');
      return toggle($this, showOrHide, $this.data('method'), duration);
    };
    return $(".js-dependent-fields[data-checkbox-id=" + ($checkbox.attr('id')) + "]").each(showOrHideFields);
  };

  bind = function() {
    var $inputs, $selects;

    $selects = $('select');
    $selects.not('[data-important]').each(_.partial(showOrHideDependentFieldsSelect, 0));
    $selects.filter('[data-important]').each(_.partial(showOrHideDependentFieldsSelect, 0));
    $selects.change(showOrHideDependentFieldsSelect);
    $inputs = $('input[type=checkbox]');
    $inputs.not('[data-important]').each(_.partial(showOrHideDependentFieldsCheckbox, 0));
    $inputs.filter('[data-important]').each(_.partial(showOrHideDependentFieldsCheckbox, 0));
    return $inputs.change(showOrHideDependentFieldsCheckbox);
  };

  this.DependentFields = {
    bind: bind
  };

}).call(this);


// user code starts here

$(document).ready(function() {
      DependentFields.bind()
    });
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.12.0/underscore-min.js" integrity="sha512-BDXGXSvYeLxaldQeYJZVWXJmkisgMlECofWFXKpWwXnfcp/R708nrs/BtNLH5cb/5TE7aeYRTDBRXu6kRL4VeQ==" crossorigin="anonymous"></script>
